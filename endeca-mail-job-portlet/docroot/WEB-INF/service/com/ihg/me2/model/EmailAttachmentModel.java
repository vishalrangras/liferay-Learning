/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ihg.me2.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.sql.Blob;

import java.util.Date;

/**
 * The base model interface for the EmailAttachment service. Represents a row in the &quot;email_attachment&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.ihg.me2.model.impl.EmailAttachmentModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.ihg.me2.model.impl.EmailAttachmentImpl}.
 * </p>
 *
 * @author vishal.rangras
 * @see EmailAttachment
 * @see com.ihg.me2.model.impl.EmailAttachmentImpl
 * @see com.ihg.me2.model.impl.EmailAttachmentModelImpl
 * @generated
 */
public interface EmailAttachmentModel extends BaseModel<EmailAttachment> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a email attachment model instance should use the {@link EmailAttachment} interface instead.
	 */

	/**
	 * Returns the primary key of this email attachment.
	 *
	 * @return the primary key of this email attachment
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this email attachment.
	 *
	 * @param primaryKey the primary key of this email attachment
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the e m a i l_ a t t a c h m e n t_ i d of this email attachment.
	 *
	 * @return the e m a i l_ a t t a c h m e n t_ i d of this email attachment
	 */
	public long getEMAIL_ATTACHMENT_ID();

	/**
	 * Sets the e m a i l_ a t t a c h m e n t_ i d of this email attachment.
	 *
	 * @param EMAIL_ATTACHMENT_ID the e m a i l_ a t t a c h m e n t_ i d of this email attachment
	 */
	public void setEMAIL_ATTACHMENT_ID(long EMAIL_ATTACHMENT_ID);

	/**
	 * Returns the email reminder ID of this email attachment.
	 *
	 * @return the email reminder ID of this email attachment
	 */
	public long getEmailReminderId();

	/**
	 * Sets the email reminder ID of this email attachment.
	 *
	 * @param emailReminderId the email reminder ID of this email attachment
	 */
	public void setEmailReminderId(long emailReminderId);

	/**
	 * Returns the attachment file name of this email attachment.
	 *
	 * @return the attachment file name of this email attachment
	 */
	@AutoEscape
	public String getAttachmentFileName();

	/**
	 * Sets the attachment file name of this email attachment.
	 *
	 * @param attachmentFileName the attachment file name of this email attachment
	 */
	public void setAttachmentFileName(String attachmentFileName);

	/**
	 * Returns the attachment file text of this email attachment.
	 *
	 * @return the attachment file text of this email attachment
	 */
	public Blob getAttachmentFileText();

	/**
	 * Sets the attachment file text of this email attachment.
	 *
	 * @param attachmentFileText the attachment file text of this email attachment
	 */
	public void setAttachmentFileText(Blob attachmentFileText);

	/**
	 * Returns the create user ID of this email attachment.
	 *
	 * @return the create user ID of this email attachment
	 */
	@AutoEscape
	public String getCreateUserId();

	/**
	 * Sets the create user ID of this email attachment.
	 *
	 * @param createUserId the create user ID of this email attachment
	 */
	public void setCreateUserId(String createUserId);

	/**
	 * Returns the create timestamp of this email attachment.
	 *
	 * @return the create timestamp of this email attachment
	 */
	public Date getCreateTimestamp();

	/**
	 * Sets the create timestamp of this email attachment.
	 *
	 * @param createTimestamp the create timestamp of this email attachment
	 */
	public void setCreateTimestamp(Date createTimestamp);

	/**
	 * Returns the last update user ID of this email attachment.
	 *
	 * @return the last update user ID of this email attachment
	 */
	@AutoEscape
	public String getLastUpdateUserId();

	/**
	 * Sets the last update user ID of this email attachment.
	 *
	 * @param lastUpdateUserId the last update user ID of this email attachment
	 */
	public void setLastUpdateUserId(String lastUpdateUserId);

	/**
	 * Returns the last update timestamp of this email attachment.
	 *
	 * @return the last update timestamp of this email attachment
	 */
	public Date getLastUpdateTimestamp();

	/**
	 * Sets the last update timestamp of this email attachment.
	 *
	 * @param lastUpdateTimestamp the last update timestamp of this email attachment
	 */
	public void setLastUpdateTimestamp(Date lastUpdateTimestamp);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(EmailAttachment emailAttachment);

	@Override
	public int hashCode();

	@Override
	public CacheModel<EmailAttachment> toCacheModel();

	@Override
	public EmailAttachment toEscapedModel();

	@Override
	public EmailAttachment toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}